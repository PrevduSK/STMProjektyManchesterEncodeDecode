@startuml
title Manchester write with system timer processing
' comment



partition "void **manchester_send_encoded_data**(uint16_t  message_encod)" {
start
    if (MSB_Frst_E) then (yes)
        :mask_16 = 0x8000;;
    else 
        :mask_16 = 0x0001;;
    endif
    note left: MSB_Frst_E == true

    while (true) is (yes)
        :comp_bit = (message_encod & mask_16) ? 1 : 0;;
        if (comp_bit) then (yes)
            :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_SET);;
        else 
            :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_RESET);;
        endif

        if (MSB_Frst_E) then (yes)
            :mask_16 >>= 1;;
        else
            :mask_16 <<= 1;;
        endif

        if (count == 15) then (15)
            :HAL_Delay(Time_delay_Transmit); \nbreak;;
         note right: TIME_DELAY_TRANSMIT == 200 ~ 200ms
            break
        endif

        :count++; \nHAL_Delay(Time_delay_Transmit);; 

    endwhile
  
end
}


partition "void **manchester_encode_and_send_char**(uint8_t  message)" {
start
    if (MSB_Frst_E) then (yes)
        :mask_8 = 0x80;;
    else
        :mask_8 = 0x01;;
    endif
    note right: MSB_Frst_E == true

    while (true) is (yes)
        :clk = !clk; \ncomp_bit = (message & mask_8) ? 1 : 0;;

        if (manchester_IEEE) then (yes)
            if ((comp_bit ^ (clk & 0x01))) then (yes)
                ':manchester_mass |= 1; \n
                :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_SET);;
            else
                ':manchester_mass |= 0; \n
                :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_RESET);;
            endif
        else
            if (!(comp_bit ^ (clk & 0x01))) then (yes)
                ':manchester_mass |= 1; \n
                :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_SET);;
            else 
                ':manchester_mass |= 0; \n
                :HAL_GPIO_WritePin (Manchester_Out_GPIO_Port, Manchester_Out_Pin, GPIO_PIN_RESET);;
            endif
        endif
        note left: manchester_IEEE == treu

        if (!clk) then (yes)
            if (MSB_Frst_E) then (yes)
                :mask_8 >>= 1;;
            else 
                :mask_8 <<= 1;;
            endif
        endif

    if (count == 15) then (15)
       ' if(print_hex) then (yes)
        '    :Serial.println(manchester_mass, HEX);;
       ' endif
       ' if(print_dec_ofMess) then (yes)
       '     :Serial.println(message, DEC);;
       ' endif

        :HAL_Delay(Time_delay_Transmit); \nbreak;;
        note left: Time_delay_Transmit == 200 ~ 200ms
        break
    endif
    ' \nmanchester_mass <<= 1;
    :count++; \nHAL_Delay(Time_delay_Transmit);
    endwhile

end
}


@enduml